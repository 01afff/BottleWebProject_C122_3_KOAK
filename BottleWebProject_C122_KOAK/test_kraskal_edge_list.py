import unittest
import kraskal_calculations

matrixs = [
    [ [0, 7, 8, -1, -1, -1],
    [7, 0, 11, 2, -1, -1],
    [8, 11, 0, 6, 9, -1],
    [-1, 2, 6, 0, 11, 9],
    [-1, -1, 9, 11, 0, 10],
    [-1, -1, -1, 9, 10 ,0] ],
    
    [ [0, 2, 4, -1, -1, -1],
    [2, 0, 9, 7, -1, -1],
    [4, 9, 0, 8, 1, -1],
    [-1, 7, 8, 0, 3, 1],
    [-1, -1, 1, 3, 0, 2],
    [-1, -1, -1, 1, 2 ,0] ],
    
    [ [0, 2, 4],
    [2, 0, 3],
    [4, 3, 0] ],
    
    [ [0, 2, 4, 6, -1, -1, -1, -1],
    [2, 0, 3, 8, 9, -1, -1, -1],
    [4, 3, 0, 5, 2, 11, -1, -1],
    [6, 8, 5, 0, 7, 4, 13, -1],
    [-1, 9, 2, 7, 0, 3, 1, 14],
    [-1, -1, 11, 4, 3, 0, 2, 5],
    [-1, -1, -1, 13, 1, 2, 0, 12],
    [-1, -1, -1, -1, 14, 5, 12, 0] ],
    
    [ [0, 2, 4, 6, -1, -1, -1, -1, -1],
    [2, 0, 3, 8, 9, -1, -1, -1, -1],
    [4, 3, 0, 5, 2, 11, -1, -1, -1],
    [6, 8, 5, 0, 7, 4, 13, -1, -1],
    [-1, 9, 2, 7, 0, 3, 1, 14, -1],
    [-1, -1, 11, 4, 3, 0, 2, 5, 15],
    [-1, -1, -1, 13, 1, 2, 0, 12, 6],
    [-1, -1, -1, -1, 14, 5, 12, 0, 9],
    [-1, -1, -1, -1, -1, 15, 6, 9, 0] ]
]

result_edge_list = [
    [[2, 4], [3, 4], [1, 2], [3, 5], [4, 6]],
    [[3, 5], [4, 6], [1, 2], [5, 6], [1, 3]],
    [[1, 2], [2, 3]],
    [[5, 7], [1, 2], [3, 5], [6, 7], [2, 3], [4, 6], [6, 8]],
    [[5, 7], [1, 2], [3, 5], [6, 7], [2, 3], [4, 6], [6, 8], [7, 9]]
]

class test_kraskal_edge_list(unittest.TestCase):
    def test_kraskal_edge_list(self):
        for i in range(len(matrixs)):
            self.assertEqual(kraskal_calculations.kraskal(matrixs[i])[0], result_edge_list[i])

if __name__ == '__main__':
    unittest.main()